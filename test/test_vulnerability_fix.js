const assert = require('assert');
const tough = require('../lib/cookie');

describe('Vulnerability fix', () => {
  it('should not accept control characters in cookie name or value', () => {
    const cookieStr = 'name=\u0000value';
    const parsedCookie = tough.Cookie.parse(cookieStr);
    assert.strictEqual(parsedCookie, undefined, 'Cookie with control characters should not be parsed');
  });

  it('should not accept terminators in cookie name or value', () => {
    const cookieStr = 'name=value\nvalue';
    const parsedCookie = tough.Cookie.parse(cookieStr);
    console.log("parsed cookie")
    console.log(parsedCookie)
    assert.strictEqual(parsedCookie, undefined, 'Cookie with terminators should not be parsed');
  });

  it('should correctly parse valid cookies', () => {
    const cookieStr = 'name=value';
    const parsedCookie = tough.Cookie.parse(cookieStr);
    assert.strictEqual(parsedCookie.key, 'name');
    assert.strictEqual(parsedCookie.value, 'value');
  });
});
